use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1358829549',
        'name' => 'vehicle/list.html.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 12 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('vehicletypes');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'vehicletype'} = $_tt_value;
    $output .=  "    ";
#line 2 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    $stash->set('v', $stash->get(['vehicles', 0, $stash->get('vehicletype'), 0, 'size', 0]));
    $output .=  "    ";
#line 11 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    if ($stash->get('v') > 0) {
    $output .=  "        <div><strong>\n        ";
#line 5 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    if ($stash->get('vehicletype') eq 'L') {
    $output .=  "Light Tanks";
    }
    elsif ($stash->get('vehicletype') eq 'M') {
    $output .=  "Medium Tanks";
    }
    elsif ($stash->get('vehicletype') eq 'H') {
    $output .=  "Heavy Tanks";
    }
    elsif ($stash->get('vehicletype') eq 'S') {
    $output .=  "SPG's";
    }
    else {
    $output .=  "Tank Destroyers";
    }
    
    $output .=  "</strong></div>\n        ";
#line 10 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['vehicles', 0, $stash->get('vehicletype'), 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'vehicle'} = $_tt_value;
    $output .=  "            <a href=\"/vehicle/";
#line 7 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    $output .=  $stash->get('country');
    $output .=  "/";
#line 7 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    $output .=  $stash->get(['vehicle', 0, 'sid', 0]);
    $output .=  "\" class=\"ui-corner-all\" style=\"border: #666 1px solid; display: inline-block; width: 160px; height: 100px; margin: 0px 10px 10px 0px\">\n                <img class=\"tooltip\" style=\"width: 160px; height: 100px\" src=\"";
#line 8 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    $output .=  $stash->get(['wr', 0, 'vehicle_icon', [ $stash->get(['vehicle', 0, 'id', 0]), 100 ]]);
    $output .=  "\" alt=\"";
#line 8 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['wr', 0, 'vehicle_name', [ $stash->get(['vehicle', 0, 'id', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" title=\"";
#line 8 "/home/ben/projects/wot-replays/templates/vehicle/list.html.tt"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['wr', 0, 'vehicle_name', [ $stash->get(['vehicle', 0, 'id', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"/>\n            </a>\n        ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "    ";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
